template_path: services/.compiled-stack.yaml

stack_name: buildkite

parameters:
  AgentsPerInstance: "1"
  AssociatePublicIpAddress: "true"
  BuildkiteAgentToken: !command_stdout "aws-kms decrypt -i AQICAHihtY3YXtfZ8ZUBSjLlbexKyDbBJr+Bea+iGPcwHIoPvwEboSFKnWiIpwxLAfnC5WDBAAAAkjCBjwYJKoZIhvcNAQcGoIGBMH8CAQAwegYJKoZIhvcNAQcBMB4GCWCGSAFlAwQBLjARBAzQ4DKiJcQv10h0nWQCARCATQZqMyxR5Mn85F5yFfbEwvm76msKnQxzqdUhJ5p68LuZ4ybeArO9jb6BEcyBLpAXNI371W30LEwq1U2/AFCJwepdHfwePq7NbONGxt05"
  BuildkiteAgentRelease: stable
  BuildkiteAgentTimestampLines: "false"
  BuildkiteQueue: default
  CostAllocationTagName: aws:createdBy
  CostAllocationTagValue: buildkite-elastic-ci-stack-for-aws
  ECRAccessPolicy: poweruser
  EnableCostAllocationTags: "false"
  EnableDockerExperimental: "true"
  EnableDockerLoginPlugin: "true"
  EnableDockerUserNamespaceRemap: "true"
  EnableECRPlugin: "true"
  EnableSecretsPlugin: "true"
  ImageId: !oculo_ami_id '*Oculo Buildkite Server*'
  InstanceCreationTimeout: PT5M
  InstanceRoleName: buildkite-instance-role
  InstanceType: c4.large
  ManagedPolicyARN: arn:aws:iam::644358627301:policy/BuildkitePolicy,arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
  MaxSize: "32"
  MinSize: "8"
  RootVolumeSize: "250"
  SecretsBucket: oculo-services-buildkite-secrets
# By turning off the KeyName, we disable SSH Ingress entirely to the BK instances
#  KeyName: services-au-june-2019
#  SecurityGroupId: sg-019ed1d65f54a2c00  # group that blocks all inbound traffic - we can use AWS Session Manager
#  SecurityGroupName: "BuildkiteSecurityGroup"
  SpotPrice: "0.060"
  SleepyTime: !timestamp_from_local 19:45
  BreakfastTime: !timestamp_from_local 08:15
  VpcId: "vpc-65745902"
  Subnets: subnet-184e5b7f,subnet-e4ab2fbc
